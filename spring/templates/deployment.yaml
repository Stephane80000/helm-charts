apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: "{{ .Release.Name | trimSuffix "-canary" | trimSuffix "-stable" }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    code-app: "{{ .Values.codeapp }}"
    tier: "{{ .Values.tier }}"
    component: "JAVA"
    function: "{{ .Values.function }}"
    {{- if or (hasSuffix "-stable" .Release.Name) (hasSuffix "-canary" .Release.Name) }}
    version: "{{ .Release.Name | trunc -6 }}"
    {{- end }}
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Release.Name | trimSuffix "-canary" | trimSuffix "-stable" }}"
      {{- if or (hasSuffix "-stable" .Release.Name) (hasSuffix "-canary" .Release.Name) }}
      version: "{{ .Release.Name | trunc -6 }}"
      {{- end }}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name | trimSuffix "-canary" | trimSuffix "-stable" }}"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        code-app: "{{ .Values.codeapp }}"
        tier: "{{ .Values.tier }}"
        component: "JAVA"
        function: "{{ .Values.function }}"
        {{- if or (hasSuffix "-stable" .Release.Name) (hasSuffix "-canary" .Release.Name) }}
        version: "{{ .Release.Name | trunc -6 }}"
        {{- end }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- if and .Values.istio.enabled }}
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        {{- end }}
{{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      containers:
        - name: "{{ .Release.Name }}"
          {{- if and (hasKey .Values.image "repository") (hasKey .Values.image "tag") }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: JAVA_OPTS
              value: {{ .Values.javaopts | quote }}
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if hasKey .Values "secrets" }}
          envFrom:
            - secretRef:
                name: "{{ .Release.Name }}"
          {{- end }}
          volumeMounts:
            {{- if .Values.pvc.enabled }}
            - name: {{ .Release.Name }}
              mountPath: "/applis/shared"
            {{- end -}}
            {{- if hasKey .Values.spring.config "content" }}
            - name: config
              mountPath: /applis/config
            {{- end -}}
            {{ if .Values.clientCerts.enabled }}
            - name: "{{ .Release.Name }}-security"
              mountPath: /applis/security
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.pvc.enabled }}
        - name: {{ .Release.Name }}
          persistentVolumeClaim:
            claimName: "{{ .Release.Name | trimSuffix "-canary" | trimSuffix "-stable" }}"
      {{- end }}
      {{- if hasKey .Values.spring.config "content" }}
        - name: config
          configMap:
            name: "{{ .Release.Name }}"
      {{- end }}
      {{- if .Values.clientCerts.enabled }}
        - name: "{{ .Release.Name }}-security"
          secret:
            secretName: "{{ .Release.Name }}-security"
      {{- end }}