apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ .Values.name }}
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    codeAP: {{ .Values.codeAP }}
    tier: {{ .Values.tier }}
    component: JAVA
    function: {{ .Values.function }}   
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        codeAP: {{ .Values.codeAP }}
        tier: {{ .Values.tier }}
        component: JAVA
        function: {{ .Values.function }}
        version: {{ .Values.version }}
      annotations:
        {{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
      securityContext:
        {{ toYaml .Values.securityContext | indent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: JAVA_OPTS
              value: {{ .Values.javaopts | quote }}
          {{ if and .Values.secretRef.enabled }}
          envFrom:
            - secretRef:
                name: "{{ .Values.name }}-secret"
          {{ end }}
          volumeMounts:
            {{ if and .Values.pvc.enabled }}
            - name: {{ .Values.name }}
              mountPath: "/applis/shared"
            {{ end }}
            {{ if hasKey .Values.spring.config "contents" }}
            - name: config
              mountPath: /applis/config
            {{ end }}
            {{ if and .Values.spring.config.clientCerts.enabled }}
            - name: "{{ .Values.name }}-security"
              mountPath: /applis/security
            {{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
          {{ toYaml .Values.livenessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
          {{ toYaml .Values.readinessProbe | indent 12 }}
          {{- end }}
          resources:
          {{ toYaml .Values.resources | indent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.pvc.enabled }}
        - name: {{ .Values.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.name }}
      {{- end }}
      {{- if hasKey .Values.spring.config "contents" }}
        - name: config
          configMap:
            name: config
      {{- end }}
      {{- if .Values.spring.config.clientCerts.enabled }}
        - name: "{{ .Values.name }}-security"
          secret:
            secretName: "{{ .Values.name }}-security"
      {{- end }}